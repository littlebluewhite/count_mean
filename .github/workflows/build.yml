name: Build EMG GUI Tool

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  build:
    strategy:
      matrix:
        platform:
          - name: linux-amd64
            os: ubuntu-latest
            target: linux/amd64
          - name: windows-amd64
            os: windows-latest
            target: windows/amd64
          - name: darwin-amd64
            os: macos-latest
            target: darwin/amd64
          - name: darwin-arm64
            os: macos-latest
            target: darwin/arm64

    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev libgtk-3-dev libwebkit2gtk-4.1-dev

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Install WebView2 (usually pre-installed on GitHub runners)
        echo "WebView2 should be available on Windows runners"

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Build application
      run: |
        wails build -platform ${{ matrix.platform.target }} -clean

    - name: List build output
      run: |
        echo "Build directory contents:"
        ls -la build/bin/ || echo "Build directory not found"

    - name: Prepare artifacts (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        mkdir -p artifacts
        if [ "${{ matrix.platform.target }}" = "linux/amd64" ]; then
          if [ -f "build/bin/EMG_tool" ]; then
            mv build/bin/EMG_tool artifacts/EMG_tool-linux-amd64
          else
            echo "Linux binary not found"
            exit 1
          fi
        elif [ "${{ matrix.platform.target }}" = "darwin/amd64" ]; then
          if [ -d "build/bin/EMG_tool.app" ]; then
            mv build/bin/EMG_tool.app artifacts/EMG_tool-darwin-amd64.app
            cd artifacts && zip -r EMG_tool-darwin-amd64.zip EMG_tool-darwin-amd64.app
          else
            echo "macOS app not found"
            exit 1
          fi
        elif [ "${{ matrix.platform.target }}" = "darwin/arm64" ]; then
          if [ -d "build/bin/EMG_tool.app" ]; then
            mv build/bin/EMG_tool.app artifacts/EMG_tool-darwin-arm64.app
            cd artifacts && zip -r EMG_tool-darwin-arm64.zip EMG_tool-darwin-arm64.app
          else
            echo "macOS ARM64 app not found"
            exit 1
          fi
        fi

    - name: Prepare artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir artifacts
        if (Test-Path "build\bin\EMG_tool.exe") {
          move build\bin\EMG_tool.exe artifacts\EMG_tool-windows-amd64.exe
        } else {
          echo "Windows executable not found"
          exit 1
        }
      shell: powershell

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: EMG_tool-${{ matrix.platform.name }}
        path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -la ./artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: EMG 資料分析工具 v${{ github.run_number }}
        body: |
          ## EMG 資料分析工具 - Release v${{ github.run_number }}
          
          ### 支援平台
          - Windows (amd64)
          - Linux (amd64)
          - macOS (amd64 - Intel)
          - macOS (arm64 - Apple Silicon)
          
          ### 功能
          - 最大平均值計算
          - 資料標準化
          - 資料做圖
          - 階段分析
          - 拖曳檔案功能
          
          ### 使用方式
          下載對應平台的執行檔即可使用。
        files: ./artifacts/*/**
        draft: false
        prerelease: false